// Code generated by MockGen. DO NOT EDIT.
// Source: expr.go

// Package mock_query is a generated GoMock package.
package mock_query

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExpr is a mock of Expr interface.
type MockExpr struct {
	ctrl     *gomock.Controller
	recorder *MockExprMockRecorder
}

// MockExprMockRecorder is the mock recorder for MockExpr.
type MockExprMockRecorder struct {
	mock *MockExpr
}

// NewMockExpr creates a new mock instance.
func NewMockExpr(ctrl *gomock.Controller) *MockExpr {
	mock := &MockExpr{ctrl: ctrl}
	mock.recorder = &MockExprMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExpr) EXPECT() *MockExprMockRecorder {
	return m.recorder
}

// Expr mocks base method.
func (m *MockExpr) Expr(column string) (string, []any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Expr", column)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].([]any)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Expr indicates an expected call of Expr.
func (mr *MockExprMockRecorder) Expr(column interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Expr", reflect.TypeOf((*MockExpr)(nil).Expr), column)
}
