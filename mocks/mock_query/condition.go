// Code generated by MockGen. DO NOT EDIT.
// Source: condition.go

// Package mock_query is a generated GoMock package.
package mock_query

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCondition is a mock of Condition interface.
type MockCondition struct {
	ctrl     *gomock.Controller
	recorder *MockConditionMockRecorder
}

// MockConditionMockRecorder is the mock recorder for MockCondition.
type MockConditionMockRecorder struct {
	mock *MockCondition
}

// NewMockCondition creates a new mock instance.
func NewMockCondition(ctrl *gomock.Controller) *MockCondition {
	mock := &MockCondition{ctrl: ctrl}
	mock.recorder = &MockConditionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCondition) EXPECT() *MockConditionMockRecorder {
	return m.recorder
}

// Condition mocks base method.
func (m *MockCondition) Condition() (string, []any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Condition")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].([]any)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Condition indicates an expected call of Condition.
func (mr *MockConditionMockRecorder) Condition() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Condition", reflect.TypeOf((*MockCondition)(nil).Condition))
}
